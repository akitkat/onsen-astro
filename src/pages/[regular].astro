---
import Base from "@layouts/Base.astro";
import Default from "@layouts/Default.astro";
import PostSingle from "@layouts/PostSingle.astro";
import { getSinglePage } from "@lib/contentParser.astro";
import config from "../config/config.json";

const siteBaseUrl = import.meta.env.SITE_BASE_URL;
const siteTitle = import.meta.env.SITE_TITLE;
const getPosts = await getSinglePage("posts");
const postsSlug = getPosts.map((item) => item.slug);

export async function getStaticPaths() {
  const posts = await getSinglePage("posts");
  const pages = await getSinglePage("pages");
  const allPages = [...pages, ...posts];

  const paths = allPages.map((page) => ({
    params: {
      regular: page.slug,
    },
    props: { page },
  }));
  return paths;
}

const { page } = Astro.props;
const { slug } = page;
const ampUrl = `${siteBaseUrl}/amp/${slug}/`;
const { title, meta_title, description, image, date, date_modified, tags } = page.data;
console.log(tags[0]);
const breadCrumbs = {
  "@context":"https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Home",
      "item": siteBaseUrl
    },
  ]
}
if (tags[0] !== '') {
  breadCrumbs['itemListElement'].push({
    "@type": "ListItem",
    "position": 2,
    "name": tags[0],
    "item": `${siteBaseUrl}/tags/${tags[0]}/`
  })
}
breadCrumbs['itemListElement'].push({
  "@type": "ListItem",
  "position": 3,
  "name": title
})
const jsonLd = [
  {
    "@context" : "http://schema.org",
    "@type" : "Article",
    "author" : {
      "@type" : "Person",
      "name" : "akitkat"
    },
    "publisher": {
      "@type": "Organization",
      "name": siteTitle,
      "logo": {
        "@type": "ImageObject",
        "url": "https://on-sen.work/icons/icon-144x144.png"
      }
    },
    "headline": title,
    "datePublished" : date,
    "dateModified": date_modified,
    "image" : image,
  },
  breadCrumbs
]
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
  amp_url={ampUrl}
  json_ld={postsSlug.includes(page.slug) ? jsonLd : {}}
>
  {
    postsSlug.includes(page.slug) ? (
      <PostSingle post={page} />
    ) : (
      <Default data={page} />
    )
  }
</Base>
